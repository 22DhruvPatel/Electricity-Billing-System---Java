/**
 * Author: Dhruv Patel
 *
 * Description: This Java program defines the Login class, which is responsible for handling user authentication 
 * through a GUI. It connects to a database to validate user credentials and grants access based on user role 
 * (Admin or Customer). The interface includes fields for username, password, and login type, along with 
 * Login, Cancel, and Sign Up buttons.
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;

public class Login extends JFrame implements ActionListener {

    // GUI components for login functionality
    JButton loginButton, cancelButton, signUp;
    JTextField userName, passwordField;
    Choice loginin;

    /**
     * Constructor for Login class.
     * Sets up the login form with fields, buttons, and action listeners.
     */
    Login() {
        super("Login Page");   // Set the title for the JFrame

        getContentPane().setBackground(Color.WHITE);    // Set background color of the content pane
        setLayout(null);  // Disable default layout manager for custom positioning

        // Username label and text field
        JLabel userLabel = new JLabel("Username");
        userLabel.setBounds(300, 20, 100, 20);
        add(userLabel);

        userName = new JTextField();
        userName.setBounds(400, 20, 150, 20);
        add(userName);

        // Password label and text field
        JLabel userPassword = new JLabel("Password");
        userPassword.setBounds(300, 60, 100, 20);
        add(userPassword);

        passwordField = new JTextField();
        passwordField.setBounds(400, 60, 150, 20);
        add(passwordField);

        // Login type label and choice selector (Admin or Customer)
        JLabel loginIn = new JLabel("Login In As");
        loginIn.setBounds(300, 100, 100, 20);
        add(loginIn);

        loginin = new Choice();
        loginin.setBounds(400, 100, 150, 20);
        loginin.add("Admin");
        loginin.add("Customer");
        add(loginin);

        // Login button with icon
        ImageIcon i1 = new ImageIcon(ClassLoader.getSystemResource("Icons/login.png"));
        Image i1_1 = i1.getImage().getScaledInstance(16, 16, Image.SCALE_DEFAULT);
        loginButton = new JButton("Login", new ImageIcon(i1_1));
        loginButton.setBounds(330, 160, 100, 20);
        loginButton.addActionListener(this);
        add(loginButton);

        // Cancel button with icon
        ImageIcon i2 = new ImageIcon(ClassLoader.getSystemResource("Icons/cancel.jpg"));
        Image i2_1 = i2.getImage().getScaledInstance(16, 16, Image.SCALE_DEFAULT);
        cancelButton = new JButton("Cancel", new ImageIcon(i2_1));
        cancelButton.setBounds(450, 160, 100, 20);
        cancelButton.addActionListener(this);
        add(cancelButton);

        // Sign Up button with icon
        ImageIcon i3 = new ImageIcon(ClassLoader.getSystemResource("Icons/signup.png"));
        Image i3_1 = i3.getImage().getScaledInstance(16, 16, Image.SCALE_DEFAULT);
        signUp = new JButton("Sign Up", new ImageIcon(i3_1));
        signUp.setBounds(380, 200, 100, 20);
        signUp.addActionListener(this);
        add(signUp);

        // Add an image to the login page for visual appeal
        ImageIcon i4 = new ImageIcon(ClassLoader.getSystemResource("Icons/second.jpg"));
        Image i4_1 = i4.getImage().getScaledInstance(250, 250, Image.SCALE_DEFAULT);
        JLabel image = new JLabel(new ImageIcon(i4_1));
        image.setBounds(0, 0, 250, 250);
        add(image);

        // Configure JFrame settings
        setSize(640, 400);
        setLocation(400, 200);
        setVisible(true);
    }

    /**
     * Handles actions for the Login, Cancel, and Sign Up buttons.
     *
     * @param e ActionEvent generated by button clicks.
     */
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == loginButton) {
            // Capture input values for login credentials and role
            String suserName = userName.getText();
            String spassword = passwordField.getText();
            String sloginin = loginin.getSelectedItem();

            try {
                // Database query to validate login credentials
                connection c = new connection();
                String query = "select * from login where username = '" + suserName + "' and password = '" + spassword + "' and user = '" + sloginin + "'";
                ResultSet rs = c.s.executeQuery(query);

                // If login is successful, proceed to main page
                if (rs.next()) {
                    String meter = rs.getString("meter_no");
                    setVisible(false);
                    new Main(sloginin, meter);
                } else {
                    // Display error message for invalid login
                    JOptionPane.showMessageDialog(null, "Invalid Login");
                    userName.setText("");
                    passwordField.setText("");
                }

            } catch (Exception e1) {
                e1.printStackTrace();
            }
        } else if (e.getSource() == cancelButton) {
            setVisible(false); // Close the login window
        } else if (e.getSource() == signUp) {
            setVisible(false); // Close login and open sign-up page
            new Signup();
        }
    }

    /**
     * Main method to launch the Login JFrame.
     *
     * @param args Command-line arguments.
     */
    public static void main(String[] args) {
        new Login();
    }
}
